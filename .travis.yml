language: cpp
dist: xenial 
sudo: required
services: [ docker ]
git: { depth: false }
os: linux # default build params for matrix
compiler: gcc
cache: ccache

env:
  global:
  - CCACHE_SLOPPINESS=time_macros
  - CMAKE_BUILD_PARALLEL_LEVEL=4
  - MAKEFLAGS=-j$CMAKE_BUILD_PARALLEL_LEVEL
  - BUILD_TYPE=$(if [[ "$TRAVIS_TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+ ]]; then if [[ "$TRAVIS_TAG" =~ -[a-z] ]]; then echo RelWithDebInfo; else echo Release; fi; else echo Debug; fi)
  matrix: # targets for linux
  - OS=debian DIST=jessie
  - OS=debian DIST=stretch
  - OS=debian DIST=buster
  - OS=debian DIST=bullseye
  # - OS=debian DIST=buster # see issue #1331 on GitHub
  - OS=debian DIST=jessie ARCH=x86
  - OS=debian DIST=stretch ARCH=x86
  - OS=debian DIST=stretch ARCH=armhf
  - OS=debian DIST=buster ARCH=x86
  - OS=debian DIST=bullseye ARCH=x86
  # - OS=debian DIST=buster ARCH=x86 # see issue #1331 on GitHub
  - OS=ubuntu DIST=xenial
  - OS=ubuntu DIST=zesty
  - OS=ubuntu DIST=artful
  - OS=ubuntu DIST=bionic
  - OS=ubuntu DIST=cosmic
  - OS=ubuntu DIST=disco
  - OS=ubuntu DIST=eoan
  - OS=ubuntu DIST=xenial ARCH=x86
  - OS=ubuntu DIST=zesty ARCH=x86
  - OS=ubuntu DIST=artful ARCH=x86
  - OS=ubuntu DIST=bionic ARCH=x86
  - OS=ubuntu DIST=cosmic ARCH=x86
  - OS=ubuntu DIST=disco ARCH=x86
  - OS=ubuntu DIST=disco ARCH=armhf
  - OS=ubuntu DIST=eoan ARCH=x86
  - OS=ubuntu DIST=eoan ARCH=armhf
  - OS=fedora
  - OS=fedora DIST=24
  - OS=fedora DIST=25
  - OS=fedora DIST=26
  - OS=fedora DIST=27
  - OS=fedora DIST=28
  - OS=fedora DIST=29
  - OS=fedora DIST=30
  # - OS=opensuse # see issue #1903 on GitHub
  - OS=opensuse DIST=42.1
  # - OS=opensuse # see issue #1331 on GitHub
  - OS=opensuse DIST=42.2
  - OS=opensuse DIST=42.3
  - OS=archlinux
  - OS=el DIST=7 # DIST=6 doesn't provide webview in wxGTK3
  - OS=el DIST=8
  - OS=linuxmint DIST=sylvia
  - OS=linuxmint DIST=tara
  - OS=linuxmint DIST=sylvia ARCH=x86
  - OS=linuxmint DIST=tara ARCH=x86

matrix:
  fast_finish: true
  include: # add non-linux targets
  - { os: osx, osx_image: xcode6.4, env: OS=osx DIST=10.10 }
  - { os: osx, osx_image: xcode8,   env: OS=osx DIST=10.11 }
  - { os: osx, osx_image: xcode9.1, env: OS=macos DIST=10.12 }
  - { os: osx, osx_image: xcode9.1, env: OS=macos DIST=10.13 }
  - stage: nightly # used only to tag and trigger nightly build
    sudo: false
    cache: pip
    services: [ ]
    git: { submodules: false, depth: 10 }
    install: skip
    before_script:
    - git config --global credential.helper store
    - echo "https://$GitHub_auth_token:x-oauth-basic@github.com" >$HOME/.git-credentials
    - git config --global user.email "nobody@no.mail"
    - git config --global user.name "Travis CI"
    script:
    - git tag -f nightly && git push -f --tags
    after_success: skip
    deploy: skip
  allow_failures:
  - env: OS=debian DIST=jessie
  - env: OS=debian DIST=stretch
  - env: OS=debian DIST=buster
  - env: OS=debian DIST=bullseye
  - env: OS=debian DIST=jessie ARCH=x86
  - env: OS=debian DIST=stretch ARCH=x86
  - env: OS=debian DIST=stretch ARCH=armhf
  - env: OS=debian DIST=buster ARCH=x86
  - env: OS=debian DIST=bullseye ARCH=x86
  - env: OS=ubuntu DIST=xenial
  - env: OS=ubuntu DIST=zesty
  - env: OS=ubuntu DIST=artful
  - env: OS=ubuntu DIST=bionic
  - env: OS=ubuntu DIST=cosmic
  - env: OS=ubuntu DIST=disco
  - env: OS=ubuntu DIST=xenial ARCH=x86
  - env: OS=ubuntu DIST=zesty ARCH=x86
  - env: OS=ubuntu DIST=artful ARCH=x86
  - env: OS=ubuntu DIST=bionic ARCH=x86
  - env: OS=ubuntu DIST=cosmic ARCH=x86
  - env: OS=ubuntu DIST=disco ARCH=x86
  - env: OS=ubuntu DIST=disco ARCH=armhf
  - env: OS=ubuntu DIST=eoan ARCH=x86
  - env: OS=ubuntu DIST=eoan ARCH=armhf
  - env: OS=fedora DIST=24
  - env: OS=fedora DIST=25
  - env: OS=fedora DIST=26
  - env: OS=fedora DIST=27
  - env: OS=fedora DIST=28
  - env: OS=fedora DIST=29
  - env: OS=fedora DIST=30
  - env: OS=opensuse
  - env: OS=opensuse DIST=42.1
  - env: OS=opensuse DIST=42.2
  - env: OS=opensuse DIST=42.3
  - env: OS=opensuse DIST=15.0
  - env: OS=opensuse DIST=15.1
  - env: OS=archlinux
  - env: OS=el DIST=7
  - env: OS=slackware DIST=14.2

stages:
  - name: nightly
    if: type IN (api, cron)
  - name: test
    if: NOT type IN (api, cron)

install: |-
  DOCKER=moneymanagerex/mmex_build_env:$OS${DIST:+.$DIST}${ARCH:+.$ARCH}
  case $TRAVIS_OS_NAME in
    linux)
      ccache -s || true
      docker pull ${DOCKER}
      docker build dockers/$OS${DIST:+.$DIST}${ARCH:+.$ARCH} --cache-from ${DOCKER} -t ${DOCKER}
      ;;
    osx)
      MACOSX_DEPLOYMENT_TARGET=$DIST
      brew update # see travis-ci/travis-ci#8552
      for p in gettext ccache zlib;
        do brew list $p >/dev/null || brew install --verbose $p; done
      brew link --force gettext zlib
      ccache -s && export PATH="/usr/local/opt/ccache/libexec:$PATH"
      brew install --verbose wxmac --with-static --with-stl
      ;;
  esac

before_script:
- cd src/db
- python ../../util/sqlite2cpp.py ../../database/tables_v1.sql && rm -f sql*.sql *.mmdbg
- python ../../util/sqliteupgrade2cpp.py ../../database
- cd ../.. && mkdir build && cd build

script: |-
  CMAKE_CMD="cmake ${ARCH:+-DCMAKE_TOOLCHAIN_FILE=util/toolchain-$TRAVIS_OS_NAME-$ARCH.cmake} -DCMAKE_BUILD_TYPE=$BUILD_TYPE .."
  case $TRAVIS_OS_NAME in
    linux)
      chmod -fR a+rwX $HOME/.ccache
      docker run -it --rm -w /moneymanagerex/build -e MAKEFLAGS \
                 -v $HOME/.ccache:/root/.ccache \
                 -v $TRAVIS_BUILD_DIR:/moneymanagerex ${DOCKER} \
        bash -c "$CMAKE_CMD && make package && eval \$MMEX_INST_CMD" ;;
    osx)
      $CMAKE_CMD && make package ;;
  esac

notifications: # set notification options
  email:
    recipients:
      - developers@moneymanagerex.org
    on_success: change # change is when the repo status goes from pass to fail or vice versa
    on_failure: always

after_success:
- ccache -s || true
# Rename mac packages
- if [ $TRAVIS_OS_NAME = osx ]; then
    for p in *.dmg; do mv -v $p ${p%Darwin.*}$OS$DIST.dmg; done; fi

# Set encrypted variable 'GitHub_auth_token' in Travis repo settings to deploy packages
# for tagged commits to GitHub Releases.
# Set encrypted variable 'PACKAGECLOUD_TOKEN' in Travis repo settings to deploy packages
# for tagged commits to packagecloud repo.
deploy:
- provider: releases
  api_key: $GitHub_auth_token
  file_glob: true
  file: $TRAVIS_BUILD_DIR/build/*.{deb,rpm,dmg,txz,pkg.tar.xz}
  skip_cleanup: true
  prerelease: true
  overwrite: true
  on: # Set deploy conditions
      # Deploy only when tag is specified
      tags: true
      # and only when API token is set
      condition: "${#GitHub_auth_token} != 0"
- provider: packagecloud
  repository: ${TRAVIS_REPO_SLUG#*/}
  username: ${TRAVIS_REPO_SLUG%/*}
  token: $PACKAGECLOUD_TOKEN
  dist: $OS/$DIST
  package_glob: $TRAVIS_BUILD_DIR/build/*.{deb,rpm}
  skip_cleanup: true
  on: # Set deploy conditions
      # Deploy only when tag is specified
      tags: true
      # and only packages generated by gcc from Linux
      # and only when API token is set
      condition: "$TRAVIS_OS_NAME = linux && ${#DIST} != 0 && $OS != slackware && ${#PACKAGECLOUD_TOKEN} != 0 && $TRAVIS_TAG != nightly"
